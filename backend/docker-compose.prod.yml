services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    env_file:
      - .env.prod
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: >
      sh -c "while ! nc -z db 5432 && ! nc -z redis 6379; do
        echo 'Waiting for database and redis...';
        sleep 2;
      done;
      python manage.py migrate &&
      gunicorn --bind 0.0.0.0:8000 config.wsgi:application"
    volumes:
      - static_volume:/app/static
    ports:
      - "8000:8000"
    env_file:
      - .env.prod
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always

  celery:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: >
      sh -c "while ! nc -z db 5432 && ! nc -z redis 6379; do
        echo 'Waiting for database and redis...';
        sleep 2;
      done;
      celery -A config worker --loglevel=info"
    env_file:
      - .env.prod
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: >
      sh -c "while ! nc -z db 5432 && ! nc -z redis 6379; do
        echo 'Waiting for database and redis...';
        sleep 2;
      done;
      celery -A config beat --loglevel=info"
    env_file:
      - .env.prod
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always

volumes:
  postgres_data:
  static_volume: