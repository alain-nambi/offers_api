version: '3.8'

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=offers_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  web:
    build: .
    command: >
      sh -c "while ! nc -z db 5432 && ! nc -z redis 6379; do
        echo 'Waiting for database and redis...';
        sleep 2;
      done;
      python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000 &&
             python manage.py seed --users 5 --offers 10"
    volumes:
      - .:/app
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - DB_NAME=offers_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery:
    build: .
    command: >
      sh -c "while ! nc -z db 5432 && ! nc -z redis 6379; do
        echo 'Waiting for database and redis...';
        sleep 2;
      done;
      celery -A config worker --loglevel=info"
    volumes:
      - .:/app
      - ./logs:/app/logs
    environment:
      - DEBUG=True
      - DB_NAME=offers_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery-beat:
    build: .
    command: >
      sh -c "while ! nc -z db 5432 && ! nc -z redis 6379; do
        echo 'Waiting for database and redis...';
        sleep 2;
      done;
      celery -A config beat --loglevel=info"
    volumes:
      - .:/app
      - ./logs:/app/logs
    environment:
      - DEBUG=True
      - DB_NAME=offers_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data: